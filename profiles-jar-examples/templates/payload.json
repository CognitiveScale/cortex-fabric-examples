{
  "payload" : {
    "spark_config": {
      "pyspark": {
        "pyspark_bin": "bin/spark-submit",
        "app_command": [
          "sql-join-conns",
          "-p",
          "lalit",
          "-c",
          "/app/conf/data-ingestion-config.json"
        ],
        "app_location": "local:///app/libs/app.jar",
        "options": {
          "--master": "local[*,5]",
          "--class": "com.c12e.cortex.examples.Application",
          "--conf": {
            "spark.fabric.client.phoenix.url": "http://cortex-internal.cortex.svc.cluster.local/fabric/v4/graphql",
            "spark.fabric.catalog.impl": "com.c12e.cortex.phoenix.profiles.spark.catalog.FabricRemoteCatalog",
            "spark.driver.memory": "25g",
            "spark.kubernetes.driver.requests.cores": "6",
            "spark.kubernetes.driver.limit.cores": "7",
            "spark.sql.shuffle.partitions": 650,

            "spark.eventLog.enabled": true,
            "spark.eventLog.dir": "gs://profiles-perf-spark-events/spark-events",
            "spark.eventLog.rolling.enabled": true,
            "spark.eventLog.rolling.maxFileSize": "128m",

            "spark.kubernetes.driver.request.cores": "0.1",
            "spark.kubernetes.driver.master": "local[*,5]",
            "spark.kubernetes.authenticate.driver.serviceAccountName": "default",
            "spark.kubernetes.executor.annotation.traffic.sidecar.istio.io/excludeOutboundPorts": "7078,7079",
            "spark.kubernetes.driver.annotation.traffic.sidecar.istio.io/excludeInboundPorts": "7078,7079",
            "spark.kubernetes.driver.podTemplateContainerName": "fabric-action",
            "spark.kubernetes.driverEnv.phoenix.groupBy": "true",
            "spark.memory.fraction": "0.9",
            "spark.memory.storageFraction": "0.1",
            "spark.executor.extraJavaOptions": "-Dlogback.configurationFile=/opt/spark/jars/logback.xml",
            "spark.executor.heartbeatInterval": "100s",
            "spark.network.timeout": "300s",
            "spark.shuffle.service.enabled": "false",
            "spark.dynamicAllocation.enabled": "false",
            "spark.scheduler.mode": "FAIR",
            "spark.sql.streaming.schemaInference": "true",
            "spark.sql.legacy.timeParserPolicy": "LEGACY",
            "spark.sql.adaptive.enabled": "true",
            "spark.sql.adaptive.coalescePartitions.enabled": "true",
            "spark.sql.extensions": "io.delta.sql.DeltaSparkSessionExtension",
            "spark.sql.catalog.spark_catalog": "org.apache.spark.sql.delta.catalog.DeltaCatalog",
            "spark.hadoop.fs.s3a.imp": "org.apache.hadoop.fs.s3a.S3AFileSystem",
            "spark.hadoop.fs.s3a.fast.upload.buffer": "disk",
            "spark.hadoop.fs.s3a.block.size": "128M",
            "spark.hadoop.fs.s3a.fast.upload": "true",
            "spark.hadoop.fs.s3a.multipart.size": "512M",
            "spark.hadoop.fs.s3a.multipart.threshold": "512M",
            "spark.hadoop.fs.s3a.fast.upload.active.blocks": "2048",
            "spark.hadoop.fs.s3a.committer.threads": "2048",
            "spark.hadoop.fs.s3a.max.total.tasks": "2048",
            "spark.hadoop.fs.s3a.threads.max": "2048",
            "spark.hadoop.fs.gs.fast.upload.buffer": "disk",
            "spark.hadoop.fs.gs.block.size": 1073741824,
            "spark.hadoop.fs.gs.fast.upload": "true",
            "spark.hadoop.fs.gs.multipart.size": "512M",
            "spark.hadoop.fs.gs.multipart.threshold": "512M",
            "spark.hadoop.fs.gs.fast.upload.active.blocks": "2048",
            "spark.hadoop.fs.gs.committer.threads": "2048",
            "spark.hadoop.fs.gs.max.total.tasks": "2048",
            "spark.hadoop.fs.gs.threads.max": "2048",
            "spark.databricks.delta.schema.autoMerge.enabled": "true",
            "spark.databricks.delta.merge.repartitionBeforeWrite.enabled": "true",

            "spark.cortex.driver.limit.ephemeralStorage": "200Gi",
            "spark.cortex.driver.request.ephemeralStorage": "100Gi",
            "spark.kubernetes.local.dirs.tmpfs": "true"
          }
        }
      }
    }
  }
}
